{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","props","user","className","href","email","name","id","username","TodoInfo","todo","completed","title","userId","usersFromServer","find","TodoList","todos","map","App","useState","setTitle","setUser","isClicked","setIsClicked","todosFromServer","setTodos","action","method","onSubmit","event","preventDefault","sort","a","b","prevState","type","placeholder","value","onChange","target","htmlFor","defaultValue","disabled","userFromServer","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a23ac03.chunk.js","sourcesContent":["interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\nexport const UserInfo = (props: { user: User }) => {\n  const { user } = props;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\n\ninterface TodoInfoInt {\n  todo: Todo\n}\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\nexport const TodoInfo = ({ todo }: TodoInfoInt) => {\n  const getUserById = (id: number): User => {\n    return usersFromServer.find((user) => user.id === id) as User;\n  };\n\n  return (\n\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={todo.completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={getUserById(todo.userId)} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListInt {\n  todos: Todo[]\n}\n\nexport const TodoList = (props: TodoListInt) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('0');\n  const [isClicked, setIsClicked] = useState(false);\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const clearForm = () => {\n    setUser('0');\n    setTitle('');\n    setIsClicked(false);\n  };\n\n  const handleSubmit\n   = (event:React.SyntheticEvent) => {\n     event.preventDefault();\n     setIsClicked(true);\n\n     if (!title || user === '0') {\n       return;\n     }\n\n     const id: number = todosFromServer.sort((a, b) => b.id - a.id)[0].id + 1;\n\n     setTodos((prevState) => [...prevState, {\n       id,\n       title,\n       completed: false,\n       userId: +user,\n     }]);\n\n     clearForm();\n   };\n\n  const handleTitleChange: React.ChangeEventHandler<HTMLInputElement>\n    = (event) => {\n      setTitle(event.target.value);\n    };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Please enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n\n            {(!title && isClicked)\n            && <span className=\"error\">Please enter a title</span>}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            defaultValue=\"0\"\n            id=\"userSelect\"\n            value={user}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((userFromServer) => {\n              return (\n                <option\n                  value={userFromServer.id.toString()}\n                  key={userFromServer.id}\n\n                >\n                  {userFromServer.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {(user === '0' && isClicked)\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}